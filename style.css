* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    background-color: #f0f0f0;
    color: #333;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    text-align: center;
    flex-direction: column;
    transition: background-color 0.3s ease; /* Smooth transition for theme toggle */
}

.container {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 30px;
    width: 300px;
    text-align: center;
    margin-bottom: 20px;
}

button {
    background-color: #ff6f61;
    color: white;
    border: none;
    padding: 10px;
    margin: 10px;
    cursor: pointer;
    border-radius: 5px;
    font-size: 1rem;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #ff4b3a;
}

#imageContainer img {
    width: 100px;
    height: auto;
    margin-top: 10px;
}

/* Spinner styles */
#loadingSpinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.5rem;
    color: #ff6f61;
    display: none; /* Initially hidden */
}

/* Dark theme */
.dark-theme {
    background-color: #333;
    color: white;
}

.dark-theme #imageContainer img {
    filter: brightness(1); /* Ensure images are not too dark */
}

.dark-theme #nameContainer p {
    color: white; /* Ensure the text is visible on dark background */
}

/* Media queries for smaller screens */
@media (max-width: 600px) {
    .container {
        width: 80%;
        padding: 20px;
    }
}

/* Fade-in effect for images */
img {
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
}

img.loaded {
    opacity: 1;
}

/* Shuffle animation */
@keyframes shuffle {
    0% {
        transform: scale(1) rotate(0deg);
    }
    25% {
        transform: scale(1.1) rotate(10deg);
    }
    50% {
        transform: scale(1) rotate(-10deg);
    }
    75% {
        transform: scale(1.1) rotate(5deg);
    }
    100% {
        transform: scale(1) rotate(0deg);
    }
}

/* Apply animation to image container when generating an agent */
#imageContainer.shuffle {
    animation: shuffle 0.5s ease-out;
}

/* Add loading state for image container */
#imageContainer.loading {
    position: relative;
}

#imageContainer.loading::after {
    content: "Loading...";
    font-size: 1.2rem;
    color: #ff6f61;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
